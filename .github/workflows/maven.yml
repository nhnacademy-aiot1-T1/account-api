# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env: # 환경 변수 등록
      ACCOUNT_API_MYSQL_PASSWORD: ${{ secrets.ACCOUNT_API_MYSQL_PASSWORD }}
    strategy:
      matrix:
        project: [ account-api ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Prepare application.properties
      run: |
        sed -i 's/\${ACCOUNT_API_MYSQL_PASSWORD}/'"$ACCOUNT_API_MYSQL_PASSWORD"'/g' src/main/resources/application-db.yml
#    - name: Make application-db.yml
#      working-directory: ${{ matrix.project }}
#      run : |
#        cd ./src/main/resources
#        touch ./application-db.yml
#        echo "${{ secrets.ACCOUNT_API_MYSQL_PROPERTIES }}" >> ./application-db.yml
        
    
    - name: Build with Maven
      run: mvn -X -B package
      working-directory: ${{ matrix.project }}

   
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        directory: ${{ matrix.project }}
    
    - name : Run SonarQube
      run : mvn sonar:sonar -Dsonar.projectKey=github-action -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.login=${{secrets.SONAR_TOKEN}}
      working-directory: ${{ matrix.project }}

    - name : upload file
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        source: "${{ matrix.project }}/target/*.jar"
        target: "~/"
        rm: false

    - name: execute shell script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script_stop: true
        script: "./startup.sh"
